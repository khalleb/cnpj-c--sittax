// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sittax.Cnpj.Data;

#nullable disable

namespace Sittax.Cnpj.Migrations
{
    [DbContext(typeof(SittaxCnpjDbContext))]
    partial class SittaxCnpjDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalCnaes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_cnaes");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalEmpresas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal?>("CapitalSocialEmpresa")
                        .HasPrecision(14, 2)
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("capital_social_empresa");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cnpj_basico");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("EnteFederativoResponsavel")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ente_federativo_responsavel");

                    b.Property<string>("NaturezaJuridica")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("natureza_juridica");

                    b.Property<string>("PorteEmpresa")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("porte_empresa");

                    b.Property<string>("QualificacaoResponsavel")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("qualificacao_responsavel");

                    b.Property<string>("RazaoSocialNomeEmpresarial")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("razao_social_nome_empresarial");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_empresas");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalEstabelecimentos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("CnaeFiscalPrincipal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("cnae_fiscal_principal");

                    b.Property<string>("CnaeFiscalSecundaria")
                        .HasColumnType("text")
                        .HasColumnName("cnae_fiscal_secundaria");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cnpj_basico");

                    b.Property<string>("CnpjCompleto")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cnpj_completo");

                    b.Property<string>("CnpjDv")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("cnpj_dv");

                    b.Property<string>("CnpjOrdem")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("cnpj_ordem");

                    b.Property<string>("Complemento")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("complemento");

                    b.Property<string>("CorreioEletronico")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("correio_eletronico");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DataInicioAtividade")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio_atividade");

                    b.Property<DateTime?>("DataSituacaoCadastral")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_situacao_cadastral");

                    b.Property<DateTime?>("DataSituacaoEspecial")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_situacao_especial");

                    b.Property<string>("Ddd1")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("ddd_1");

                    b.Property<string>("Ddd2")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("ddd_2");

                    b.Property<string>("DddFax")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("ddd_fax");

                    b.Property<string>("Fax")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("fax");

                    b.Property<string>("IdentificadorMatrizFilial")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("identificador_matriz_filial");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("logradouro");

                    b.Property<string>("MotivoSituacaoCadastral")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("motivo_situacao_cadastral");

                    b.Property<string>("Municipio")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("municipio");

                    b.Property<string>("NomeCidadeExterior")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome_cidade_exterior");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Pais")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("pais");

                    b.Property<string>("SituacaoCadastral")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("situacao_cadastral");

                    b.Property<string>("SituacaoEspecial")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("situacao_especial");

                    b.Property<string>("Telefone1")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefone_1");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefone_2");

                    b.Property<string>("TipoLogradouro")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipo_logradouro");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_estabelecimentos");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalMotivos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_motivos");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalMunicipios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_municipios");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalNaturezas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_naturezas");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalPaises", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_paises");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalQualificacoes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_qualificacoes");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalSimples", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cnpj_basico");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DataExclusaoMei")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_exclusao_mei");

                    b.Property<DateTime?>("DataExclusaoSimples")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_exclusao_simples");

                    b.Property<DateTime?>("DataOpcaoMei")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_opcao_mei");

                    b.Property<DateTime?>("DataOpcaoSimples")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_opcao_simples");

                    b.Property<string>("OpcaoPeloMei")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("opcao_pelo_mei");

                    b.Property<string>("OpcaoPeloSimples")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("opcao_pelo_simples");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_simples");
                });

            modelBuilder.Entity("Sittax.Cnpj.Data.Models.ReceitaFederalSocios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CnpjBasico")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cnpj_basico");

                    b.Property<string>("CpfCnpjSocio")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf_cnpj_socio");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DataEntradaSociedade")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_entrada_sociedade");

                    b.Property<string>("FaixaEtaria")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("faixa_etaria");

                    b.Property<string>("IdentificadorSocio")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("identificador_socio");

                    b.Property<string>("NomeRepresentante")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("nome_representante");

                    b.Property<string>("NomeSocioRazaoSocial")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("nome_socio_razao_social");

                    b.Property<string>("Pais")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("pais");

                    b.Property<string>("QualificacaoRepresentanteLegal")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("qualificacao_representante_legal");

                    b.Property<string>("QualificacaoSocio")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("qualificacao_socio");

                    b.Property<string>("RepresentanteLegal")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("representante_legal");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rf_socios");
                });

            modelBuilder.Entity("Sittax.Cnpj.Models.ReceitaFederalLogArquivos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("DataDownload")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_download");

                    b.Property<string>("HashSha256Csv")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("hash_sha256_csv");

                    b.Property<string>("HashSha256Zip")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("hash_sha256_zip");

                    b.Property<string>("NomeArquivoCsv")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome_arquivo_csv");

                    b.Property<string>("NomeArquivoZip")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome_arquivo_zip");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("periodo");

                    b.Property<int>("StatusCsv")
                        .HasColumnType("integer")
                        .HasColumnName("status_csv");

                    b.Property<int>("StatusDownload")
                        .HasColumnType("integer")
                        .HasColumnName("status_download");

                    b.Property<long?>("TamanhoCsv")
                        .HasColumnType("bigint")
                        .HasColumnName("tamanho_csv");

                    b.Property<long>("TamanhoZip")
                        .HasColumnType("bigint")
                        .HasColumnName("tamanho_zip");

                    b.Property<DateTime>("UltimaVerificacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultima_verificacao");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("NomeArquivoZip");

                    b.HasIndex("Periodo");

                    b.HasIndex("NomeArquivoZip", "Periodo")
                        .IsUnique();

                    b.ToTable("rf_log_arquivos");
                });
#pragma warning restore 612, 618
        }
    }
}
